<div class="hero-wrap hero-bread" style="background-image: url('/images/bg_1.jpg');">
  <div class="container">
    <div class="row no-gutters slider-text align-items-center justify-content-center">
      <div class="col-md-9 ftco-animate text-center">
        <p class="breadcrumbs">
          <span class="mr-2"><a href="/user/home">Home</a></span> 
          <% if(currentPage !== 'Home') { %>
              <span><%= currentPage %></span>
          <% } %>
      </p>
        <h1 class="mb-0 bread">Products</h1>
      </div>
    </div>
  </div>
</div>

<section class="ftco-section ftco-cart">
  <div class="container">
    <div class="row">
      <div class="col-md-12 ftco-animate">
        <div class="cart-list">
          <table class="table">
            <thead class="thead-primary">
              <tr class="text-center">
                <th>&nbsp;</th>
                <th>Product List</th>
                <th>&nbsp;</th>
                <th>Price</th>
                <th>Status</th>
                <th>Total</th>
              </tr>
            </thead>
            <tbody>
              <% if (wishlist && wishlist.products.length > 0) { %>
                <% wishlist.products.forEach(product => { %>
                  <tr class="text-center product-row" data-product-id="<%= product._id %>">
                    <td class="product-remove">
                      <a href="#" class="remove-from-wishlist">
                        <span class="ion-ios-close"></span>
                      </a>
                    </td>
                    <td class="image-prod">
                      <img src="/img/productsimg/<%=product.images[0]%>" alt="<%=product.name%>" class="img" style="width: 100px; height: 100px; object-fit: cover;">
                    </td>
                    <td class="product-name">
                      <h3><%= product.name %></h3>
                      <p><%= product.description %></p>
                    </td>
                    <td class="price">₹<%= product.price.toFixed(2) %></td>
                    <td class="status"><%= product.status%></td>
                    <td class="total">₹<%= product.price.toFixed(2) %></td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="6" class="text-center">Your wishlist is empty</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Handle remove from wishlist
  document.querySelectorAll('.remove-from-wishlist').forEach(button => {
    button.addEventListener('click', async function(e) {
      e.preventDefault();
      const productRow = this.closest('.product-row');
      const productId = productRow.dataset.productId;

      try {
        const response = await fetch(`/user/wishlist/remove/${productId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        const data = await response.json();
        
        if (data.success) {
          // Remove the product row
          productRow.remove();
          
          // Check if wishlist is now empty
          const remainingProducts = document.querySelectorAll('.product-row');
          if (remainingProducts.length === 0) {
            const tbody = document.querySelector('tbody');
            tbody.innerHTML = '<tr><td colspan="6" class="text-center">Your wishlist is empty</td></tr>';
          }
          
          // Show success message
          Swal.fire({
            title: 'Success!',
            text: 'Product removed from wishlist',
            icon: 'success',
            timer: 2000,
            showConfirmButton: false
          });
        } else {
          Swal.fire({
            title: 'Error!',
            text: data.message || 'Failed to remove product from wishlist',
            icon: 'error'
          });
        }
      } catch (error) {
        console.error('Remove from wishlist error:', error);
        Swal.fire({
          title: 'Error!',
          text: 'Failed to remove product from wishlist',
          icon: 'error'
        });
      }
    });
  });
});

</script>