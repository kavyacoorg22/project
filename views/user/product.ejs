<div class="hero-wrap hero-bread" style="background-image: url('/images/bg_1.jpg');">
  <div class="container">
    <div class="row no-gutters slider-text align-items-center justify-content-center">
      <div class="col-md-9 ftco-animate text-center">
        <p class="breadcrumbs">
          <span class="mr-2"><a href="/user/home">Home</a></span> 
          <% if(currentPage !== 'Home') { %>
              <span><%= currentPage %></span>
          <% } %>
      </p>
        <h1 class="mb-0 bread">Product Single</h1>
      </div>
    </div>
  </div>
</div>


  

<!-- main content section -->

<section class="ftco-section">
  <div class="container">
    <div class="row">
      <div class="col-lg-6 mb-5 ftco-animate">
        <div id="product-slider" class="carousel slide" data-ride="carousel">
          <ol class="carousel-indicators">
            <% product.images.forEach((image, index) => { %>
              <li data-target="#product-slider" data-slide-to="<%= index %>" class="<%= index === 0 ? 'active' : '' %>"></li>
            <% }) %>
          </ol>
 
          <div class="carousel-inner">
            <% product.images.forEach((image, index) => { %>
              <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                <div class="zoom-container">
                  <img src="/img/productsimg/<%= image %>" 
                       class="d-block w-100 img-fluid zoom-img" 
                       alt="Product Image <%= index + 1 %>"
                       data-magnify-src="/img/productsimg/<%= image %>">
                </div>
              </div>
            <% }) %>
          </div>
 
          <a class="carousel-control-prev" href="#product-slider" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
          </a>
          <a class="carousel-control-next" href="#product-slider" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
          </a>
        </div>
      </div>
 
      <div class="col-lg-6 product-details pl-md-5 ftco-animate">
        <h3><%=product.name%></h3>
        <% if(product.stock <= 10) { %>
          <span class="stock-badge product-stock-badge product-low-stock">Low Stock: <%=product.stock%></span>
        <% } else if(product.stock > 10 && product.stock<= 50) { %>
          <span class="stock-badge product-stock-badge product-medium-stock">Stock: <%=product.stock%></span>
        <% } else { %>
          <span class="stock-badge product-stock-badge product-high-stock">In Stock: <%=product.stock%></span>
        <% } %>
        <div class="rating d-flex">
          <p class="text-left mr-4">
            <a href="#" class="mr-2">5.0</a>
            <a href="#"><span class="ion-ios-star-outline"></span></a>
            <a href="#"><span class="ion-ios-star-outline"></span></a>
            <a href="#"><span class="ion-ios-star-outline"></span></a>
            <a href="#"><span class="ion-ios-star-outline"></span></a>
            <a href="#"><span class="ion-ios-star-outline"></span></a>
          </p>
          
        </div>
        <div>
          <%if(product.category.name!=='Juice'){%>
          <p class="price" style="color: #000; display: flex; align-items: center;">
            <span>₹<%=product.price%> / KG</span>
            
          </p>
          <%}else{%>
          <p class="price" style="color: #000; display: flex; align-items: center;">
            <span>₹<%=product.price%> / Bottel</span>
            
          </p>
          <%}%>
        </div>
        <p>A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth. Text should turn around and return to its own, safe country. But nothing the copy said could convince her and so it didn't take long until.</p>
        <div class="row mt-4">
          <div class="w-100"></div>
          <div class="input-group col-md-6 d-flex mb-3">
             <span class="input-group-btn mr-2">
                <button type="button" class="quantity-left-minus btn"  data-type="minus" data-field="">
                 <i class="ion-ios-remove"></i>
                </button>
              </span>
              <input type="text" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" data-max-quantity="<%=product.quantity%>">
             <span class="input-group-btn ml-2">
                <button type="button" class="quantity-right-plus btn" data-type="plus" data-field="">
                   <i class="ion-ios-add"></i>
               </button>
             </span>
          </div>
          <div class="w-100"></div>
          <div class="col-md-12">
           <%if(product.category.name!=='Juice'){%>
             <p style="color: #000;"><%=product.quantity%> kg available</p>
           
              <%}else{%>
              <p style="color: #000;"><%=product.quantity%> bottel available</p>
              
            <%}%>
          </div>
        </div>
        <%if(product.status==='In-stock'){%>
        <p><a href="/user/cart" class="btn btn-black py-3 px-5" data-product-id="<%= product._id %>">Add to Cart</a></p>
        <%}else if(product.status==='Out-of-stock'){%>
          <p><a href="cart.html" class="btn-notify">Notify me</a></p>
          <%}%>
      </div>
    </div>
  </div>
 </section>
 

<!-- review section -->
<section>
<div class="reviews-section">
  <!-- Review Form -->
  <div class="review-form-container">
    <h3>Write a Review</h3>
    <form id="reviewForm" class="review-form" data-product-id="<%= product._id %>">
      <div class="rating-input">
        <span>Your Rating:</span>
        <div class="stars">
          <input type="radio" id="star5" name="rating" value="5">
          <label for="star5">★</label>
          <input type="radio" id="star4" name="rating" value="4">
          <label for="star4">★</label>
          <input type="radio" id="star3" name="rating" value="3">
          <label for="star3">★</label>
          <input type="radio" id="star2" name="rating" value="2">
          <label for="star2">★</label>
          <input type="radio" id="star1" name="rating" value="1">
          <label for="star1">★</label>
        </div>
      </div>
      <textarea name="review" placeholder="Write your review here..." ></textarea>
      <button type="submit" class="submit-review">Submit Review</button>
    </form>
  </div>

  <!-- Reviews Display -->
  <div class="reviews-container">
    <h3>Customer Reviews</h3>
    <div class="reviews-list">
      <% if (reviews && reviews.length > 0) { %>
        <% reviews.forEach(review => { %>
          <div class="review-item">
            <div class="review-header">
              <div class="reviewer-info">
                <img src="/img/productsimg/image.png" alt="User">
                <span class="reviewer-name">
                  <%= review.userId && review.userId.firstname ? review.userId.firstname : 'Anonymous User' %>
                </span>
              </div>
              <div class="rating-stars">
                <% for(let i = 0; i < 5; i++) { %>
                  <span class="star <%= i < (review.rating || 0) ? 'filled' : '' %>">★</span>
                <% } %>
              </div>
            </div>
            <div class="review-content">
              <p><%= review.review || 'No review content' %></p>
            </div>
            <div class="review-date">
              <%= review.createdAt ? new Date(review.createdAt).toLocaleDateString() : 'Date not available' %>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <p>No reviews yet. Be the first to review this product!</p>
      <% } %>
    </div>
  </div>
</div>
</section>
<!-- related product section  -->
<section class="ftco-section">
  <div class="container">
    <div class="row justify-content-center mb-3 pb-3">
      <div class="col-md-12 heading-section text-center ftco-animate">
        <span class="subheading">Products</span>
        <h2 class="mb-4">Related Products</h2>
        <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia</p>
      </div>
    </div>   		
  </div>
<!-- related products -->
  <div class="container">
    <div class="row">
      <% relatedProducts.forEach(products=>{%>
      <div class="col-md-6 col-lg-3 ftco-animate">
        <div class="product">
          <a href="/user/product/<%=products._id%>" class="img-prod"><img class="img-fluid" src="/img/productsimg/<%=products.images[0]%>" alt="Colorlib Template">
            <!-- <span class="status">30%</span> -->
            <div class="overlay"></div>
          </a>
          <div class="text py-3 pb-4 px-3 text-center">
            <h3><a href="/user/product/<%=products._id%>"><%=products.name%></a></h3>
            <div class="d-flex">
              <div class="pricing">
                <p class="price"><span class="mr-2 price-dc"></span><span class="price-sale">₹<%=products.price%></span></p>
              </div>
            </div>
            <div class="bottom-area d-flex px-3">
              <div class="m-auto d-flex">
                
                <a href="#" class="buy-now d-flex justify-content-center align-items-center mx-1" data-product-id="<%= product._id %>">
                  <span><i class="ion-ios-cart"></i></span>
                </a>
                <a href="#" class="heart d-flex justify-content-center align-items-center ">
                  <span><i class="ion-ios-heart"></i></span>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
     <%})%>
    </div>
  </div>
</section>


<script>

$(document).ready(function() {
  // Quantity increment
  $('.quantity-right-plus').click(function(e) {
    e.preventDefault();
    
    var quantityInput = $(this).closest('.input-group').find('.input-number');
    var quantity = parseInt(quantityInput.val());
    var maxQuantity = parseInt(quantityInput.data('max-quantity'));

    if (quantity < maxQuantity) {
      quantityInput.val(quantity + 1);
    }
  });

  // Quantity decrement
  $('.quantity-left-minus').click(function(e) {
    e.preventDefault();
    
    var quantityInput = $(this).closest('.input-group').find('.input-number');
    var quantity = parseInt(quantityInput.val());
    
    if (quantity > 1) {
      quantityInput.val(quantity - 1);
    }
  });
});

// Review Submission
document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('reviewForm');
  
  if (!form) {
    console.error('Review form not found');
    return;
  }

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const productId = form.dataset.productId;
    const rating = formData.get('rating');
    const review = formData.get('review');
    
    if (!rating) {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Please select a rating!'
      });
      return;
    }

    if (!review.trim()) {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Please write a review!'
      });
      return;
    }

    if (!productId) {
      console.error('Product ID not found');
      return;
    }

    const data = {
      productId: productId,
      rating: formData.get('rating'),
      review: formData.get('review')
    };

    try {
      const response = await fetch('/user/product/reviews', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify(data)
      });

      const result = await response.json();

      if (response.ok) {
        Swal.fire({
          icon: 'success',
          title: 'Thank you!',
          text: 'Your review has been submitted successfully'
        }).then(() => {
          window.location.reload();
        });
      } else {
        throw new Error(result.message || 'Failed to submit review');
      }
    } catch (error) {
      console.error('Review submission error:', error);
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: error.message || 'Something went wrong!'
      });
    }
  });
});

// Image Zoom
document.addEventListener('DOMContentLoaded', () => {
  const zoomContainers = document.querySelectorAll('.zoom-container');

  zoomContainers.forEach(container => {
    const img = container.querySelector('.zoom-img');

    if (img) {
      container.addEventListener('mousemove', (e) => {
        const { left, top, width, height } = container.getBoundingClientRect();
        const x = ((e.clientX - left) / width) * 100;
        const y = ((e.clientY - top) / height) * 100;

        img.style.transformOrigin = `${x}% ${y}%`;
        img.style.transform = 'scale(2)';
      });

      container.addEventListener('mouseleave', () => {
        img.style.transform = 'scale(1)';
        img.style.transformOrigin = 'center center';
      });
    }
  });
});

// Add to Cart for Related Products
document.addEventListener('DOMContentLoaded', () => {
  const relatedProductButtons = document.querySelectorAll('.buy-now');

  relatedProductButtons.forEach(button => {
    button.addEventListener('click', async (event) => {
      event.preventDefault();

      const productId = button.getAttribute('data-product-id');

      if (!productId) {
        Swal.fire('Invalid product selected');
        return;
      }

      try {
        const response = await fetch('/user/cart/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ productId, quantity: 1 }),
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire('Product added to cart successfully');
          
          if (data.cartCount !== undefined) {
            const cartCountElement = document.getElementById('cart-count');
            if (cartCountElement) {
              cartCountElement.textContent = data.cartCount;
            }
          }
        } else {
          Swal.fire(data.message || 'Failed to add product to cart');
        }
      } catch (error) {
        console.error('Add to cart error:', error);
        Swal.fire('An error occurred while adding the product to the cart');
      }
    });
  });
});

// Add to Cart for Main Product
document.addEventListener('DOMContentLoaded', () => {
  const mainProductButton = document.querySelector('.btn-black[data-product-id]');

  if (mainProductButton) {
    mainProductButton.addEventListener('click', async (event) => {
      event.preventDefault();

      const productId = mainProductButton.getAttribute('data-product-id');
      const quantity = parseInt(document.getElementById('quantity').value) || 1;

      if (!productId) {
        Swal.fire('Invalid product selected');
        return;
      }

      try {
        const response = await fetch('/user/cart/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ productId, quantity }),
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire('Product added to cart successfully');
          
          if (data.cartCount !== undefined) {
            const cartCountElement = document.getElementById('cart-count');
            if (cartCountElement) {
              cartCountElement.textContent = data.cartCount;
            }
          }
        } else {
          Swal.fire(data.message || 'Failed to add product to cart');
        }
      } catch (error) {
        console.error('Add to cart error:', error);
        Swal.fire('An error occurred while adding the product to the cart');
      }
    });
  }
});

</script>
