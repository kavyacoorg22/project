<div class="hero-wrap hero-bread" style="background-image: url('/images/bg_1.jpg');">
  <div class="container">
    <div class="row no-gutters slider-text align-items-center justify-content-center">
      <div class="col-md-9 ftco-animate text-center">
        <p class="breadcrumbs">
          <span class="mr-2"><a href="/user/home">Home</a></span> 
          <% if(currentPage !== 'Home') { %>
            <span><%= currentPage %></span>
          <% } %>
        </p>
        <h1 class="mb-0 bread">Products</h1>
      </div>
    </div>
  </div>
</div>

<section class="ftco-section">
  <div class="container">
    <div class="row">
      <!-- Filter Section -->
      <div class="col-lg-3 col-md-4 filter-section">
        <h5>Filters</h5>
        <hr>

        <!-- Search Box -->
        <div class="filter-group mb-4">
          <h6>Search Products</h6>
          <form action="/user/shop" method="GET" class="search-form">
            <div class="input-group">
              <input 
                type="text" 
                name="search" 
                class="form-control" 
                placeholder="Search products..."
                value="<%= locals.searchQuery || '' %>"
              >
              <div class="input-group-append">
                <button class="btn btn-primary" type="submit">
                  <i class="ion-ios-search"></i>
                </button>
              </div>
            </div>
            <!-- Preserve filters in search -->
            <% if (selectedCategory) { %>
              <input type="hidden" name="category" value="<%= selectedCategory %>">
            <% } %>
            <% if (currentSort) { %>
              <input type="hidden" name="sort" value="<%= currentSort %>">
            <% } %>
            <% if (currentStock) { %>
              <input type="hidden" name="stock" value="<%= currentStock %>">
            <% } %>
          </form>
        </div>

        <!-- Stock Filter -->
        <div class="filter-group">
          <h6>Stock</h6>
          <label>
            <input type="checkbox" id="stock-in" value="in-stock" 
              <%= currentStock === 'in-stock' ? 'checked' : '' %>> In-stock
          </label>
          <label>
            <input type="checkbox" id="stock-out" value="out-of-stock"
              <%= currentStock === 'out-of-stock' ? 'checked' : '' %>> Out-of-stock
          </label>
        </div>

      
      
        <!-- Sort Filter Dropdown -->
        <div class="filter-group mb-4">
          <h6>Sort By</h6>
          <select class="form-control" id="sort-filter" name="sort">
            <option value="">Default Sorting</option>
            <option value="price-low-to-high" <%= currentSort === 'price-low-to-high' ? 'selected' : '' %>>Price: Low to High</option>
            <option value="price-high-to-low" <%= currentSort === 'price-high-to-low' ? 'selected' : '' %>>Price: High to Low</option>
            <option value="new-arrivals" <%= currentSort === 'new-arrivals' ? 'selected' : '' %>>New Arrivals</option>
            <option value="a-to-z" <%= currentSort === 'a-to-z' ? 'selected' : '' %>>Name: A to Z</option>
            <option value="z-to-a" <%= currentSort === 'z-to-a' ? 'selected' : '' %>>Name: Z to A</option>
            <option value="ratings-high-to-low" <%= currentSort === 'ratings-high-to-low' ? 'selected' : '' %>>Ratings: High to Low</option>
            <option value="ratings-low-to-high" <%= currentSort === 'ratings-low-to-high' ? 'selected' : '' %>>Ratings: Low to High</option>
          </select>
        </div>
      
        <!-- Apply Filters Button -->
        <button class="btn btn-primary btn-block" id="apply-filters">Apply Filters</button>
      </div>

      <!-- Product Section -->
      <div class="col-lg-9 col-md-8">
        <!-- Categories List -->
        <div class="row justify-content-center">
          <div class="col-md-10 mb-5 text-center">
            <ul class="product-category">
              <li><a href="/user/shop" class="<%= !selectedCategory ? 'active' : '' %>">All</a></li>
              <% categories.forEach(category => { %>
              <li>
                <a href="/user/shop?category=<%= category._id %><%= searchQuery ? '&search=' + searchQuery : '' %><%= currentSort ? '&sort=' + currentSort : '' %><%= currentStock ? '&stock=' + currentStock : '' %>" 
                   class="<%= selectedCategory === category._id.toString() ? 'active' : '' %>">
                  <%= category.name %>
                </a>
              </li>
              <% }) %>
            </ul>
          </div>
        </div>

        <!-- Products Grid -->
        <div class="row">
          <% if (products.length === 0) { %>
            <div class="col-12 text-center">
              <p>No products found.</p>
            </div>
          <% } %>
          <% products.forEach(product => { %>
            <div class="col-md-6 col-lg-3 ftco-animate">
              <div class="product">
                <a href="/user/product/<%= product._id %>" class="img-prod">
                  <img 
                    class="img-fluid" 
                    src="/img/productsimg/<%= product.images[0] %>" 
                    alt="<%= product.name %>"
                    onerror="this.onerror=null; this.src='/public/images/placeholder.jpg';"
                  >
                  <div class="overlay"></div>
                </a>
                <div class="text py-3 pb-4 px-3 text-center">
                  <h3><a href="/user/product/<%= product._id %>"><%= product.name %></a></h3>
                  <div class="d-flex">
                    <div class="pricing">
                      <p class="price">
                        <% if (product.price) { %>
                          <span class="price-sale">â‚¹<%= product.price %></span>
                        <% } %>
                      </p>
                    </div>
                  </div>
                  <div class="bottom-area d-flex px-3">
                    <div class="m-auto d-flex">
                      <a href="#" class="buy-now d-flex justify-content-center align-items-center mx-1" data-product-id="<%= product._id %>">
                        <span><i class="ion-ios-cart"></i></span>
                      </a>
                      <a href="#" class="heart d-flex justify-content-center align-items-center" data-product-id="<%= product._id %>">
                        <span><i class="ion-ios-heart"></i></span>
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        </div>

        <!-- Pagination -->
        <div class="row mt-5">
          <div class="col text-center">
            <div class="block-27">
              <ul>
                <% if (page > 1) { %>
                  <li>
                    <a href="/user/shop?page=<%= page - 1 %>
                      <%= selectedCategory ? '&category=' + selectedCategory : '' %>
                      <%= searchQuery ? '&search=' + searchQuery : '' %>
                      <%= currentSort ? '&sort=' + currentSort : '' %>
                      <%= currentStock ? '&stock=' + currentStock : '' %>">&lt;</a>
                  </li>
                <% } %>
                
                <% for (let i = 1; i <= totalPages; i++) { %>
                  <li class="<%= i === page ? 'active' : '' %>">
                    <a href="/user/shop?page=<%= i %>
                      <%= selectedCategory ? '&category=' + selectedCategory : '' %>
                      <%= searchQuery ? '&search=' + searchQuery : '' %>
                      <%= currentSort ? '&sort=' + currentSort : '' %>
                      <%= currentStock ? '&stock=' + currentStock : '' %>">
                      <%= i %>
                    </a>
                  </li>
                <% } %>
                
                <% if (page < totalPages) { %>
                  <li>
                    <a href="/user/shop?page=<%= page + 1 %>
                      <%= selectedCategory ? '&category=' + selectedCategory : '' %>
                      <%= searchQuery ? '&search=' + searchQuery : '' %>
                      <%= currentSort ? '&sort=' + currentSort : '' %>
                      <%= currentStock ? '&stock=' + currentStock : '' %>">&gt;</a>
                  </li>
                <% } %>
              </ul>
            </div>
          </div>
        </div>

      </div>


    </div>
  </div>
</section>

  
  

  <script>
    document.addEventListener('DOMContentLoaded', () => {
  // Cache DOM elements
  const searchForm = document.querySelector('.search-form');
  const stockFilters = document.querySelectorAll('input[id^="stock-"]');
  const sortFilter = document.getElementById('sort-filter');
  const applyFiltersBtn = document.getElementById('apply-filters');

  // Function to get current URL parameters
  const getCurrentUrlParams = () => {
    return new URLSearchParams(window.location.search);
  };

  // Function to update URL and reload products
  const updateFilters = () => {
    const queryParams = new URLSearchParams();

    // Add category if exists
    const currentCategory = getCurrentUrlParams().get('category');
    if (currentCategory) {
      queryParams.set('category', currentCategory);
    }

    // Add search if exists
    const searchValue = document.querySelector('input[name="search"]').value;
    if (searchValue) {
      queryParams.set('search', searchValue);
    }

    // Add stock filter
    const checkedStock = document.querySelector('input[id^="stock-"]:checked');
    if (checkedStock) {
      queryParams.set('stock', checkedStock.value);
    }

    // Add sort filter
    const sortValue = sortFilter.value;
    if (sortValue) {
      queryParams.set('sort', sortValue);
    }

    // Reset to page 1 when filters change
    queryParams.set('page', '1');

    // Update URL and reload page
    window.location.href = `/user/shop?${queryParams.toString()}`;
  };

  // Event Listeners
  applyFiltersBtn.addEventListener('click', updateFilters);

  // Make stock filters mutually exclusive
  stockFilters.forEach(filter => {
    filter.addEventListener('change', (e) => {
      stockFilters.forEach(otherFilter => {
        if (otherFilter !== e.target) {
          otherFilter.checked = false;
        }
      });
    });
  });

  // Handle search form submission
  searchForm.addEventListener('submit', (e) => {
    e.preventDefault();
    updateFilters();
  });

  // Handle cart functionality
  document.querySelectorAll('.buy-now').forEach(button => {
    button.addEventListener('click', async (event) => {
      event.preventDefault();
      const productId = button.getAttribute('data-product-id');
      
      if (!productId) {
        Swal.fire('Invalid product selected');
        return;
      }

      try {
        const response = await fetch('/user/cart/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ productId, quantity: 1 }),
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire('Product added to cart successfully');
          if (data.cartCount !== undefined) {
            const cartCountElement = document.getElementById('cart-count');
            if (cartCountElement) {
              cartCountElement.textContent = data.cartCount;
            }
          }
        } else {
          Swal.fire(data.message || 'Failed to add product to cart');
        }
      } catch (error) {
        console.error('Add to cart error:', error);
        Swal.fire('An error occurred while adding the product to the cart');
      }
    });
  });

  // Handle wishlist functionality
  document.querySelectorAll('.heart').forEach(button => {
    button.addEventListener('click', async (e) => {
      e.preventDefault();
      const productId = button.dataset.productId;
      
      try {
        const response = await fetch(`/user/wishlist/add/${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        const data = await response.json();
        if (data.success) {
          Swal.fire('Product added to wishlist');
          button.querySelector('.ion-ios-heart').classList.add('active');
        } else {
          Swal.fire(data.message || 'Failed to add product to wishlist', 'error');
        }
      } catch (error) {
        console.error('Add to wishlist error:', error);
        Swal.fire('Failed to add product to wishlist', 'error');
      }
    });
  });
});
  </script>