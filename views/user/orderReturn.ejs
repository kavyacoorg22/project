<div class="hero-wrap hero-bread" style="background-image: url('/images/bg_1.jpg');">
    <div class="container">
      <div class="row no-gutters slider-text align-items-center justify-content-center">
        <div class="col-md-9 ftco-animate text-center">
          <p class="breadcrumbs">
            <span class="mr-2"><a href="/user/home">Home</a></span> 
            <% if(currentPage !== 'Home') { %>
                <span><%= currentPage %></span>
            <% } %>
        </p>
          <h1 class="mb-0 bread">Return Order</h1>
        </div>
      </div>
    </div>
  </div>
  


<div class="layout-wrapper">
  <!-- Sidebar -->
  <aside class="sidebar">
      <a href="/user/profile"><span>Profile</span></a>
      <a href="/user/address"><span>Address</span></a>
      <a href="#" class="active"><span>Order</span></a>
      <a href="#"><span>Wallet</span></a>
      <a href="#" class="logout"><span>Logout</span></a>
  </aside>

  <!-- Main Content -->
  <main class="main-content">
      <div class="return-order-container">
          <h1 class="return-order-title">ORDER RETURN</h1>
          <label class="return-reason-label">REASON FOR RETURN</label>
          <textarea 
              class="return-reason-textarea" 
              placeholder="Please provide your reason for return..."
          ></textarea>
          <div class="buttons-container">
            <button class="return-button" 
            data-productid="<%= productId %>" 
            data-orderid="<%= orderID %>">
        RETURN
    </button>
          </div>
      </div>
  </main>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cancelProductButtons = document.querySelectorAll('.return-button');

    cancelProductButtons.forEach(button => {
      button.addEventListener('click', async (e) => {
        const textarea = document.querySelector('.return-reason-textarea');
        const returnReason = textarea.value.trim();  // Changed variable name to match backend

        // Check if textarea is empty
        if (!returnReason) {
          Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please provide a reason for return'
          });
          return;
        }

        // Let's add some console.logs to debug
        console.log('Button clicked');
        console.log('Product ID:', e.target.dataset.productid);
        console.log('Order ID:', e.target.dataset.orderid);

        const productId = e.target.dataset.productid;
        const orderID = e.target.dataset.orderid;
       
        if (!productId || !orderID) {
          console.log('Missing IDs:', { productId, orderID });
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Missing product or order ID'
          });
          return;
        }

        try {
          console.log('Sending request with:', {
            url: `/user/returnOrder/${orderID}/${productId}`,
            returnReason
          });

          const response = await fetch(`/user/returnOrder/${orderID}/${productId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ returnReason })  // Match the variable name we changed above
          });

          const result = await response.json();
          console.log('Response:', result);

          if (result.success) {
            Swal.fire({
              icon: 'success',
              title: 'Product Return',
              text: 'Product return request submitted'
            }).then(() => {
              window.location.href = `/user/orderHistory`;
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Return Failed',
              text: result.message
            });
          }
        } catch (error) {
          console.error('Error details:', error);  // Added detailed error logging
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred'
          });
        }
      });
    });
  });
</script>