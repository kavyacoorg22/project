<div class="dashboard-container">
    <h1 class="section-title">Sales Report</h1>

   

    <!-- Report Table -->
    <div class="report-table-container">
        <table class="report-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Orders</th>
                    <th>Revenue</th>
                    <th>Discount</th>
                    <th>Coupon Deduction</th>
                    <th>Net Amount</th>
                </tr>
            </thead>
            <tbody>
                <% salesData.forEach(function(day) { %>
                    <tr>
                        <td><%= day.date %></td>
                        <td><%= day.ordersCount %></td>
                        <td>₹<%= day.revenue.toFixed(2) %></td>
                        <td>₹<%= day.discount.toFixed(2) %></td>
                        <td>₹<%= day.couponDeduction.toFixed(2) %></td>
                        <td>₹<%= day.netAmount.toFixed(2) %></td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</div>


<div class="ledger-container">
    <h2>Ledger Book</h2>

    <div class="button-group">
        <button class="generate-btn" onclick="generateLedger()">Generate Ledger</button>
        <button class="download-excel" onclick="downloadExcel()" disabled>Download Excel</button>
        <button class="download-pdf" onclick="downloadPDF()" disabled>Download PDF</button>
    </div>

    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>Year</th>
                    <th>Month</th>
                    <th>Total Sales</th>
                </tr>
            </thead>
            <tbody id="ledgerTable">
                <!-- Data will be populated here dynamically -->
            </tbody>
        </table>
    </div>
</div>

  

<script>
   

    async function generateLedger() {
    try {
        const response = await fetch("/admin/ledger-data");
        const ledgerData = await response.json();
        const tableBody = document.getElementById("ledgerTable");
        tableBody.innerHTML = "";

        ledgerData.forEach(entry => {
            const row = `
                <tr>
                    <td>${entry.year}</td>
                    <td>${entry.month}</td>
                    <td>${entry.totalSales}</td>
                </tr>
            `;
            tableBody.innerHTML += row;
        });

        // Enable Download Buttons
        document.querySelector(".download-excel").removeAttribute("disabled");
        document.querySelector(".download-pdf").removeAttribute("disabled");

    } catch (error) {
        console.error("Error fetching ledger data:", error);
    }
}


// Load ledger on page load
document.addEventListener("DOMContentLoaded", generateLedger);

    function downloadExcel() {
  const table = document.getElementById("ledgerTable");
  const ws = XLSX.utils.table_to_sheet(table);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, "Ledger Book");

  XLSX.writeFile(wb, "Ledger_Book.xlsx");
}

function downloadPDF() {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();

  doc.text("Ledger Book", 20, 10);
  doc.autoTable({
    html: "#ledgerTable",
    startY: 20,
    theme: "grid",
  });

  doc.save("Ledger_Book.pdf");
}
</script>